<?php

namespace App\Http\Controllers\Admin;

use App\Http\Requests\LandingRequest;
use Backpack\CRUD\app\Http\Controllers\CrudController;
use Backpack\CRUD\app\Library\CrudPanel\CrudPanelFacade as CRUD;

use App\Models\Landing;
/**
 * Class SupplierCrudController
 * @package App\Http\Controllers\Admin
 * @property-read CrudPanel $crud
 */
class LandingCrudController extends CrudController
{
    use \Backpack\CRUD\app\Http\Controllers\Operations\ListOperation;
    use \Backpack\CRUD\app\Http\Controllers\Operations\CreateOperation;
    use \Backpack\CRUD\app\Http\Controllers\Operations\UpdateOperation;
    use \Backpack\CRUD\app\Http\Controllers\Operations\DeleteOperation;
    // use \Backpack\CRUD\app\Http\Controllers\Operations\ShowOperation;


    public function setup()
    {
        $this->crud->setModel(Landing::class);
        $this->crud->setRoute(config('backpack.base.route_prefix') . '/landing');
        $this->crud->setEntityNameStrings('–ª–µ–Ω–¥–∏–Ω–≥', '–ª–µ–Ω–¥–∏–Ω–≥–∏');
    }

    protected function setupListOperation()
    {
      $this->crud->addColumn([
        'name' => 'is_active',
        'label' => 'üü¢',
        'type' => 'check'
      ]);

      $this->crud->addColumn([
        'name' => 'name',
        'label' => '–ù–∞–∑–≤–∞–Ω–∏–µ',
      ]);

      $this->crud->addColumn([
        'name' => 'key',
        'label' => '–ö–ª—é—á',
      ]);

      $this->crud->addColumn([
        'name' => 'pages',
        'label' => '–ö–æ–ª-–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü',
        'type' => 'relationship_count'
      ]);
    }

    protected function setupCreateOperation()
    {
      $this->crud->setValidation(LandingRequest::class);

      // IS ACTIVE
      $this->crud->addField([
        'name' => 'is_active',
        'label' => '–ê–∫—Ç–∏–≤–µ–Ω',
        'type' => 'boolean',
        'default' => '1',
        'tab' => '–û—Å–Ω–æ–≤–Ω–æ–µ'
      ]);

      $this->crud->addField([
        'name' => 'name',
        'label' => '–ù–∞–∑–≤–∞–Ω–∏–µ',
        'type' => 'text',
        'tab' => '–û—Å–Ω–æ–≤–Ω–æ–µ'
      ]);

      // SLUG
      $this->crud->addField([
        'name' => 'key',
        'label' => '–ö–ª—é—á',
        'hint' => '–ü–æ-—É–º–æ–ª—á–∞–Ω–∏—é –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è.',
        'tab' => '–û—Å–Ω–æ–≤–Ω–æ–µ'
      ]);

      // DISK
      $this->crud->addField([
        'name' => 'disk',
        'label' => '–ü—É—Ç—å –∫ –¥–∏—Å–∫—É',
        'hint' => '–£–∫–∞–∂–∏—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Å–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞ —Ñ–∞–π–ª–æ–≤). –ù–∞–ø—Ä–∏–º–µ—Ä: <code>absolute/path/to/landing_root/public/disk_name</code>',
        'type' => 'text',
        'fake' => true,
        'store_in' => 'extras',
        'tab' => '–û—Å–Ω–æ–≤–Ω–æ–µ'
      ]);

      //
      $this->crud->addField([
        'name' => 'footer',
        'label' => "–®–æ—Ä—Ç–∫–æ–¥—ã", 
        'type' => 'repeatable',
        'fields' => [
          [
            'name'  => 'shortcode',
            'type'  => 'text',
            'label' => 'Shortcode',
            'hint' => '–ö–ª—é—á —à–æ—Ä—Ç–∫–æ–¥–∞, –±–µ–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ {{-- --}}',
          ],
          [
            'name'  => 'is_clear_tags',
            'type'  => 'checkbox',
            'label' => '–û—á–∏—â–∞—Ç—å html-—Ç–µ–≥–∏?',
          ],
          [
            'name'  => 'value',
            'type'  => 'ckeditor',
            'label' => '–ó–Ω–∞—á–µ–Ω–∏–µ',
            'attributes' => [
              'rows' => 10
            ],
          ],
        ],
        'new_item_label'  => '–î–æ–±–∞–≤–∏—Ç—å —à–æ—Ä—Ç–∫–æ–¥',
        'init_rows' => 0,
        'min_rows' => 0,
        'fake' => true,
        'store_in' => 'fields',
        'tab' => '–ü–æ–¥–≤–∞–ª'
      ]);

      $this->crud->addField([
        'name' => 'footer_html',
        'label' => 'HTML –ø–æ–¥–≤–∞–ª–∞',
        'type' => 'ace',
        'attributes' => [
          'rows' => 10
        ],
        'tab' => '–ü–æ–¥–≤–∞–ª'
      ]);

      //
      $this->crud->addField([
        'name' => 'header',
        'label' => "–®–æ—Ä—Ç–∫–æ–¥—ã", 
        'type' => 'repeatable',
        'fields' => [
          [
            'name'  => 'shortcode',
            'type'  => 'text',
            'label' => 'Shortcode',
            'hint' => '–ö–ª—é—á —à–æ—Ä—Ç–∫–æ–¥–∞, –±–µ–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ {{-- --}}',
          ],
          [
            'name'  => 'is_clear_tags',
            'type'  => 'checkbox',
            'label' => '–û—á–∏—â–∞—Ç—å html-—Ç–µ–≥–∏?',
          ],
          [
            'name'  => 'value',
            'type'  => 'ckeditor',
            'label' => '–ó–Ω–∞—á–µ–Ω–∏–µ',
            'attributes' => [
              'rows' => 10
            ],
          ],
        ],
        'new_item_label'  => '–î–æ–±–∞–≤–∏—Ç—å —à–æ—Ä—Ç–∫–æ–¥',
        'init_rows' => 0,
        'min_rows' => 0,
        'fake' => true,
        'store_in' => 'fields',
        'tab' => '–®–∞–ø–∫–∞'
      ]);

      $this->crud->addField([
        'name' => 'header_html',
        'label' => 'HTML —à–∞–ø–∫–∏',
        'type' => 'ace',
        'attributes' => [
          'rows' => 10
        ],
        'tab' => '–®–∞–ø–∫–∞'
      ]);
      

      // HTML
      $this->crud->addField([
        'name' => 'head_stack',
        'label' => "–¢–µ–≥–∏ –≤ head", 
        'type' => 'repeatable',
        'fields' => [
          [
            'name'  => 'tag_name',
            'type'  => 'text',
            'label' => '–ù–∞–∑–≤–∞–Ω–∏–µ (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)',
          ],
          [
            'name'  => 'tag',
            'type'  => 'textarea',
            'label' => '–¢–µ–≥',
          ],
        ],
        'new_item_label'  => '–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥',
        'init_rows' => 0,
        'min_rows' => 0,
        'tab' => '–¢–µ–≥–∏'
      ]);

      // SEO
      $this->crud->addField([
        'name' => 'head_tags',
        'label' => "–¢–µ–≥–∏ –≤ head", 
        'type' => 'repeatable',
        'fields' => [
          [
            'name'  => 'tag_name',
            'type'  => 'text',
            'label' => '–ù–∞–∑–≤–∞–Ω–∏–µ (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)',
          ],
          [
            'name'  => 'tag',
            'type'  => 'textarea',
            'label' => '–¢–µ–≥',
          ],
        ],
        'new_item_label'  => '–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥',
        'fake' => true,
        'store_in' => 'seo',
        'init_rows' => 0,
        'min_rows' => 0,
        'tab' => 'SEO'
      ]);

      $this->crud->addField([
        'name' => 'meta_title',
        'label' => "Meta Title", 
        'type' => 'text',
        'fake' => true, 
        'store_in' => 'seo',
        'tab' => 'SEO'
      ]);

      $this->crud->addField([
          'name' => 'meta_description',
          'label' => "Meta Description", 
          'type' => 'textarea',
          'fake' => true, 
          'store_in' => 'seo',
          'tab' => 'SEO'
      ]);

      $this->crud->addField([
          'name' => 'meta_keywords',
          'label' => "Meta Keywords", 
          'type' => 'textarea',
          'fake' => true, 
          'store_in' => 'seo',
          'tab' => 'SEO'
      ]);

      $this->crud->addField([
        'name' => 'robots_txt',
        'label' => "robots.txt", 
        'type' => 'textarea',
        'attributes' => [
          'rows' => 10
        ],
        'tab' => 'SEO'
      ]);


      $this->crud->addField([
        'name' => 'locale',
        'label' => "–Ø–∑—ã–∫ —Å–∞–π—Ç–∞",
        'fake' => true, 
        'store_in' => 'seo',
        'hint' => '<code>og:locale</code>, <code>html lang=""</code>',
        'tab' => 'SEO'
      ]);

      $this->crud->addField([
        'name' => 'site_name',
        'label' => "og:site_name",
        'fake' => true, 
        'store_in' => 'seo',
        'tab' => 'SEO'
      ]);



      $this->crud->addField([
        'name' => 'timeout',
        'label' => "–¢–∞–π–º–µ—Ä", 
        'type' => 'number',
        'attributes' => ["step" => 1],
        'suffix' => '—Å–µ–∫.',
        'fake' => true, 
        'store_in' => 'extras',
        'hint' => '–í—Ä–µ–º—è –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Ö–≤–µ–¥–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–∫–∑–∞–Ω–Ω—É—é –Ω–∏–∂–µ.',
        'tab' => '–†–µ–¥–∏—Ä–µ–∫—Ç'
      ]);

      $this->crud->addField([
        'name' => 'redirect_link',
        'label' => "–†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ url", 
        'type' => 'text',
        'fake' => true, 
        'store_in' => 'extras',
        'hint' => 'Url —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥.',
        'tab' => '–†–µ–¥–∏—Ä–µ–∫—Ç'
      ]);

      // 
      $this->crud->addField([
        'name' => 'closed_html',
        'label' => 'HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
        'type' => 'ace',
        'attributes' => [
          'rows' => 10
        ],
        'tab' => '–ó–∞–≥–ª—É—à–∫–∞'
      ]);
    }

    protected function setupUpdateOperation()
    {
        $this->setupCreateOperation();
    }
}
